// Generated by CoffeeScript 1.6.3
/*
	Copyright 2013 David Pearson.
	BSD License.
*/


(function() {
  var add, equals, multiply, multiplyScalar, trace, transpose;

  add = function(a, b) {
    var c, i, j;
    if (a.length === b.length && a[0].length === b[0].length) {
      c = [];
      for (i in a) {
        c[i] = [];
        for (j in a[i]) {
          c[i][j] = a[i][j] + b[i][j];
        }
      }
      return c;
    } else {
      return null;
    }
  };

  multiplyScalar = function(a, mult) {
    var i, j;
    for (i in a) {
      for (j in a[i]) {
        a[i][j] *= mult;
      }
    }
    return a;
  };

  multiply = function(a, b) {
    var c, i, j, k;
    if (a[0].length === b.length) {
      c = [];
      for (i in a) {
        c[i] = [];
        for (j in b[i]) {
          c[i][j] = 0;
          for (k in b) {
            c[i][j] += a[i][k] * b[k][j];
          }
        }
      }
      return c;
    } else {
      return null;
    }
  };

  trace = function(matrix) {
    var i, tr;
    if (matrix.length === matrix[0].length) {
      tr = 0;
      for (i in matrix) {
        tr += matrix[i][i];
      }
      return tr;
    } else {
      return NaN;
    }
  };

  transpose = function(matrix) {
    var col, res, row;
    res = [];
    for (row in matrix[0]) {
      res[row] = [];
    }
    for (row in matrix) {
      for (col in matrix[row]) {
        res[col][row] = matrix[row][col];
      }
    }
    return res;
  };

  equals = function(a, b) {
    var i, j;
    if (a.length === b.length && a[0].length === b[0].length) {
      for (i in a) {
        for (j in a[i]) {
          if (a[i][j] !== b[i][j]) {
            return false;
          }
        }
      }
      return true;
    } else {
      return false;
    }
  };

  exports.add = add;

  exports.multiplyScalar = multiplyScalar;

  exports.multiply = multiply;

  exports.trace = trace;

  exports.transpose = transpose;

  exports.equals = equals;

}).call(this);
