// Generated by CoffeeScript 1.6.3
/*
	Copyright 2013 David Pearson.
	BSD License.
*/


(function() {
  var gelim, gjelim, swap;

  swap = function(a, x, y) {
    var tmp;
    tmp = a[y];
    a[y] = a[x];
    a[x] = tmp;
    return a;
  };

  gelim = function(a) {
    var aug, col, i, j, k, max, mult, row, x;
    x = 0;
    while (x < a.length) {
      max = x;
      i = x;
      while (i < a.length) {
        if (Math.abs(a[i][x]) > Math.abs(a[max][x])) {
          max = i;
        }
        i++;
      }
      if (a[max][x] === 0) {
        console.log("Not happening...");
      }
      swap(a, x, max);
      i = x + 1;
      while (i < a.length) {
        j = x + 1;
        k = a[i][x] / a[x][x];
        while (j < a[max].length) {
          a[i][j] -= a[x][j] * k;
          j++;
        }
        a[i][x] = 0;
        i++;
      }
      x++;
    }
    aug = a[0].length - 1;
    row = 0;
    while (row < a.length) {
      mult = 1 / a[row][row];
      col = row;
      while (col <= aug) {
        a[row][col] *= mult;
        col++;
      }
      row++;
    }
    return a;
  };

  gjelim = function(a) {
    var aug, i, j, k, max, mult, row, x;
    x = 0;
    while (x < a.length) {
      max = x;
      i = x;
      while (i < a.length) {
        if (Math.abs(a[i][x]) > Math.abs(a[max][x])) {
          max = i;
        }
        i++;
      }
      if (a[max][x] === 0) {
        console.log("Not happening...");
      }
      swap(a, x, max);
      i = 0;
      while (i < x) {
        j = x + 1;
        k = a[i][x] / a[x][x];
        while (j < a[max].length) {
          a[i][j] -= a[x][j] * k;
          j++;
        }
        a[i][x] = 0;
        i++;
      }
      i = x + 1;
      while (i < a.length) {
        j = x + 1;
        k = a[i][x] / a[x][x];
        while (j < a[max].length) {
          a[i][j] -= a[x][j] * k;
          j++;
        }
        a[i][x] = 0;
        i++;
      }
      x++;
    }
    aug = a[0].length - 1;
    row = 0;
    while (row < a.length) {
      mult = 1 / a[row][row];
      a[row][row] *= mult;
      a[row][aug] *= mult;
      row++;
    }
    return a;
  };

  exports.gelim = gelim;

  exports.gjelim = gjelim;

}).call(this);
